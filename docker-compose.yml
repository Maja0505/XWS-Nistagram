version: '3'
services:

  gateway:
    image: nginx:1.19.8-alpine
    ports:
      - 8080:8080
    networks:
      - network1
    volumes:
      - ./ApiGateway/nginx.conf:/etc/nginx/nginx.conf
      - ./ApiGateway/api_gateway.conf:/etc/nginx/api_gateway.conf

  user-service:
    image: user-service:compose_build
    build:
      context: ./UserService
      dockerfile: Dockerfile
    networks:
      - network1
    environment:
      PORT: ${USER_SERVICE_PORT}
      HOST: mongo
    restart: on-failure
    depends_on:
      - mongo
    links: 
      - mongo

  post-service:
    image: post-service:compose_build
    build:
      context: ./PostService
      dockerfile: Dockerfile
    networks:
      - network1
    environment:
      PORT: ${POST_SERVICE_PORT}
    restart: on-failure
    depends_on:
      - cass
    links: 
      - cass
    
      
  mongo:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - "mongodata:/data/db"
    networks:
      - network1
  
  cass:
    image: cassandra:3.11.8
    container_name: cass
    hostname: cass
    healthcheck:
        test: ["CMD", "cqlsh", "-e", "describe keyspaces" ]
        interval: 5s
        timeout: 5s
        retries: 60
    networks:
      - network1
    ports:
      - "9042:9042"
    volumes:
      - ./cass.yaml:/etc/cassandra/cass.yaml

volumes:
   mongodata:

networks:
   network1:
     name: nistagram
     driver: bridge